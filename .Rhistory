n <- 50
treatment <- c(rep(c("seeded", "unseeded"), c(n/2, n/2)))
p <- c(0.32, 0.30)
# generate single data set
outcomeS <- sample(c("yawn", "no_yawn"), size = n/2, replace = TRUE,
prob = c(p[1], 1 - p[1])) # generate yawners in seeded group
outcomeU <- sample(c("yawn", "no_yawn"), size = n/2, replace = TRUE,
prob = c(p[2], 1 - p[2])) # generate yawners in seeded group
outcome <- c(outcomeS, outcomeU)
obs_stat <- table(treatment, outcome)[1, 2]
nYawn <- sum(table(treatment, outcome)[, 2])
table(treatment, outcome)
it <- 10000
stat1 <- rep(NA, it)
for(i in 1:it) {
outcome_shuffled <- sample(outcome)
stat1[i] <- table(treatment, outcome_shuffled)[1, 2]
}
barplot(table(stat1))
stat2 <- stat1 <- rep(NA, it)
pYawn <- nYawn/n # characteristic 2
for(i in 1:it) {
outcome <- sample(c("yawn", "no_yawn"), size = n, replace = TRUE,
prob = c(pYawn, 1 - pYawn)) # characteristics 1 and 3
stat2[i] <- sum(outcome[1:(n/2)] == "yawn") # test statistic
}
barplot(table(stat2))
d1 <- density(stat1, bw = .7)
d2 <- density(stat2, bw = .7)
plot(NA, type = "n", xlim = c(0, max(max(d1$x), max(d2$x))), ylim = c(0, max(max(d1$y), max(d2$y))), xlab = "number of yawners in seeded group", ylab = "density", bty = "n", yaxt = "n")#, xaxt = "n")
lines(d1$x, d1$y, col = "steelblue", lwd = 2)
lines(d2$x, d2$y, col = "goldenrod", lwd = 2)
abline(v = obs_stat, col = "darkgray", lty = 2)
text(7.5, .19, "model 1")
text(3.6, .04, "model 2")
head(stat1)
library(knitr)
load("C:/Users/Andrew/Dropbox/OpenIntro/oiLabs/lab8/lab/evals.RData")
q()
load("C:/Users/Andrew/Dropbox/OpenIntro/oiLabs/lab8/lab/evals.RData")
multiLines
install.packages("jsonlite")
library(jsonlite)
?fromJSON
x <- seq(0,1)
x <- seq(0,1, by = .001)
y <- x^2
mean(y)
knit_theme$get()
library(knitr)
library(knitr)
knit_theme$get()
knit_theme$set("navajo-night")
dbinom(8, 145, .03)
?dbinom
dbinom(8, 145, .096)
8/145
dbinom(8, 145, .04)
dbinom(8, 145, .05)
dbinom(8, 145, .06)
1-pbinom(8, 145, .03)
1-pbinom(7, 145, .03)
LA <- read.csv("http://www.math.smith.edu/~bbaumer/mth241/LAhomes.csv")
LA <- subset(la, sqft > 0)
plot(price ~ sqft, data = LA)
LA <- read.csv("http://www.math.smith.edu/~bbaumer/mth241/LAhomes.csv")
LA <- subset(LA, sqft > 0)
plot(price ~ sqft, data = LA)
mod1 <- lm(price ~ sqft, data = LA)
plot(mod1)
LA <- read.csv("http://www.math.smith.edu/~bbaumer/mth241/LAhomes.csv")
plot(price ~ sqft, data = LA)
mod1 <- lm(price ~ sqft, data = LA)
plot(mod1)
plot(log(price) ~ log(sqft), data = LA)
mod1 <- lm(price ~ sqft, data = LA)
plot(mod1)
plot(mod1)
LA <- read.csv("http://www.math.smith.edu/~bbaumer/mth241/LAhomes.csv")
plot(log(price) ~ log(sqft), data = LA)
log(0)
library(knitr)
library(openintro)
install.packages("openintro")
library(openintro)
?plot
?Rprof
?curve
curve(x^2, 0, 1)
seq.along()
?seq.along
?seq_along
a <- rnorm(10)
a
seq_along(a)
(classseq_along(a))
class(seq_along(a))
class(a)
a
install.packages("devtools")
devtools::install_github("rstudio/packrat")
-5:-1
?curve
plot(qnorm)
plot(dnorm)
plot(pnorm)
plot(dnorm)
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
mdims <- subset(bdims, bdims$sex == 1)
fdims <- subset(bdims, bdims$sex == 0)
fhgtmean <- mean(fdims$hgt)
fhgtsd <- sd(fdims$hgt)
hist(fdims$hgt, probability = TRUE)
x <- 140:190
y <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)
lines(x = x, y = y, col = "blue")
curve(dnorm)
?curve
hist(fdims$hgt, probability = TRUE)
curve(dnorm, add = T)
x <- c(a = 1, b = 2, c = 3)
x
require(devtools)
install_github("mosaic", "rpruim", "beta", local=TRUE)
mplot(HELPrct)
require(moasic)
require(mosaic)
mplot(HELPrct)
mplot(HELPrct, default=“histogram")
mplot(HELPrct, default=“histogram")
mplot(HELPrct, default="histogram")
mplot(HELPrct)
mplot(HELPrct, default="histogram")
mymod = lm(pcs ~ age + female, data=HELPrct)
mplot(mymod)   # generate the standard 4 plots
nyc = read.csv("nyc.csv")
require(plyr)
nyc = rename(nyc, replace = c("X..packages.delivered.on.first.attempt" = "Delivery.success.rate"))
nyc = read.csv("nyc.csv")
3.25+2+1.5+1+3.25+4.5+1
3.25+2+1.5+1.51.25+3+3+1+1
3.25+2+1.5+1.5+1.25+3+3+1+1
3.25+2+1.5+1+3.25+4.5+1+2
3.25+2+1.5+1.25+6+1+1+1
18.5*250
17*250
directory="specdata"
threshold=0
pollfiles3 <- list.files(directory, full.names=TRUE)
polldata3 <- c()
class(polldata3)
str(polldata3)
i = 1
polldata3 <- rep(NA, length(pollfiles3))
class(polldata3)
length(polldata3)
head(polldata3)
polldata3 <- rep(0, length(pollfiles3))
head(polldata3)
polldata3 <- rep(NA, 322)
length(polldata3)
head(polldata3)
library(RCurl)
root <- "http://games.crossfit.com/athlete/"
i = 7038
root <- "http://games.crossfit.com/athlete/"
n <- 5
name <- rep(NA, n)
region <- rep(NA, n)
# team <- rep(NA, n)
affiliate <- rep(NA, n)
gender <- rep("blank", n)
age <- rep(NA, n)
height <- rep(NA, n)
weight <- rep(NA, n)
fran <- rep(NA, n)
helen <- rep(NA, n)
grace <- rep(NA, n)
filthyfifty <- rep(NA, n)
fightgonebad <- rep(NA, n)
fourhundred <- rep(NA, n)
fivekm <- rep(NA, n)
cleanandjerk <- rep(NA, n)
snatch <- rep(NA, n)
deadlift <- rep(NA, n)
backsquat <- rep(NA, n)
maxpullups <- rep(NA, n)
for(i in 7038:(7038+n)){
html <- getURL(paste(root, i, sep = ""))
a <- unlist(strsplit(html, "<title>Athlete: "))
a <- unlist(strsplit(a[2], "</title>"))[1]
a <- gsub("_| CrossFit Games", "", a)
a <- unlist(strsplit(a, " "))
name[i - 7037] <- paste(a[1:(length(a) - 1)], collapse = " ")
a <- unlist(strsplit(html, "set_region_title_class"))
a <- unlist(strsplit(a[2], "</a></dd>"))[1]
region[i - 7037] <- unlist(strsplit(a, '">'))[3]
# team might include 0, 1, or 2 (or more?) values
#  a <- unlist(strsplit(html, "/team/"))
#  team[i - 7037] <- unlist(strsplit(a[2], "</a></dd>"))[1]
a <- unlist(strsplit(html, "/affiliate/"))
a <- unlist(strsplit(a[2], "</a></dd"))[1]
affiliate[i - 7037] <- unlist(strsplit(a, '">'))[2]
a <- unlist(strsplit(html, "<dt>Gender:</dt><dd>"))
gender[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<dt>Age:</dt><dd>"))
age[i - 7037] <- as.integer(unlist(strsplit(a[2], "</dd>"))[1])
a <- unlist(strsplit(html, "<dt>Height:</dt><dd>"))
height[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<dt>Weight:</dt><dd>"))
weight[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<td>Fran</td><td>"))
fran[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Helen</td><td>"))
helen[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Grace</td><td>"))
grace[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Filthy 50</td><td>"))
filthyfifty[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Fight Gone Bad</td><td>"))
fightgonebad[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Sprint 400m</td><td>"))
fourhundred[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Run 5k</td><td>"))
fivekm[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Clean & Jerk</td><td>"))
cleanandjerk[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Snatch</td><td>"))
snatch[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Deadlift</td><td>"))
deadlift[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Back Squat</td><td>"))
backsquat[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Max Pull-ups</td><td>"))
maxpullups[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
}
head(data.frame(name, region, affiliate, gender, age, height, weight, fran, helen, grace, filthyfifty, fightgonebad, fourhundred, fivekm, cleanandjerk, snatch, deadlift, backsquat, maxpullups))
```
h <- height # saving this for reuse
height <- gsub("--", NA, height)
height <- gsub("&#039;","-", height)
height <- gsub("&quot;","", height)
height <- gsub("-"," ", height)
V2 <- unlist(lapply(height, strsplit, " "))
height <- h # so now we're reset
height <- gsub("--", NA, height)
naInd <- is.na(height)
height <- height[!naInd] # temporarily remove the na
height <- gsub("&#039;","-", height)
height <- gsub("&quot;","", height)
height <- gsub("-"," ", height)
V2 <- unlist(lapply(height, strsplit, " "))
height <- as.integer(V2[seq(1, length(V2)-1, by = 2)])
V2 <- V2[seq(2, length(V2), by = 2)]
height[V2 == "cm"] <- height[V2 == "cm"] * 0.393701
height[V2 != "cm"] <- height[V2 != "cm"] * 12 + as.integer(V2[V2 != "cm"])
height
naInd
height
height2 <- rep(NA, length(naInd)) # add the NA back in
length(naInd)
height2 <- rep(NA, length(naInd)) # add the NA back in
height2
!naInd
height
height2[!naInd] <- height
height2
fivekm
length(fivekm)
fivekm[fivekm == "00:00"] <- NA
fivekm
fivekm[fivekm == "0:00"] <- NA
fivekm
class(fivekm)
?as.date
?Date
maxpullups
fivekm
system.time(m <- rnorm(1e8))
root <- "http://games.crossfit.com/athlete/"
n <- 25
name <- rep(NA, n)
region <- rep(NA, n)
# team <- rep(NA, n)
affiliate <- rep(NA, n)
gender <- rep("blank", n)
age <- rep(NA, n)
height <- rep(NA, n)
weight <- rep(NA, n)
fran <- rep(NA, n)
helen <- rep(NA, n)
grace <- rep(NA, n)
filthyfifty <- rep(NA, n)
fightgonebad <- rep(NA, n)
fourhundred <- rep(NA, n)
fivekm <- rep(NA, n)
cleanandjerk <- rep(NA, n)
snatch <- rep(NA, n)
deadlift <- rep(NA, n)
backsquat <- rep(NA, n)
maxpullups <- rep(NA, n)
system.time(
for(i in 7038:(7038+n)){
html <- getURL(paste(root, i, sep = ""))
a <- unlist(strsplit(html, "<title>Athlete: "))
a <- unlist(strsplit(a[2], "</title>"))[1]
a <- gsub("_| CrossFit Games", "", a)
a <- unlist(strsplit(a, " "))
name[i - 7037] <- paste(a[1:(length(a) - 1)], collapse = " ")
a <- unlist(strsplit(html, "set_region_title_class"))
a <- unlist(strsplit(a[2], "</a></dd>"))[1]
region[i - 7037] <- unlist(strsplit(a, '">'))[3]
# team might include 0, 1, or 2 (or more?) values
#  a <- unlist(strsplit(html, "/team/"))
#  team[i - 7037] <- unlist(strsplit(a[2], "</a></dd>"))[1]
a <- unlist(strsplit(html, "/affiliate/"))
a <- unlist(strsplit(a[2], "</a></dd"))[1]
affiliate[i - 7037] <- unlist(strsplit(a, '">'))[2]
a <- unlist(strsplit(html, "<dt>Gender:</dt><dd>"))
gender[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<dt>Age:</dt><dd>"))
age[i - 7037] <- as.integer(unlist(strsplit(a[2], "</dd>"))[1])
a <- unlist(strsplit(html, "<dt>Height:</dt><dd>"))
height[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<dt>Weight:</dt><dd>"))
weight[i - 7037] <- unlist(strsplit(a[2], "</dd>"))[1]
a <- unlist(strsplit(html, "<td>Fran</td><td>"))
fran[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Helen</td><td>"))
helen[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Grace</td><td>"))
grace[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Filthy 50</td><td>"))
filthyfifty[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Fight Gone Bad</td><td>"))
fightgonebad[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Sprint 400m</td><td>"))
fourhundred[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Run 5k</td><td>"))
fivekm[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Clean & Jerk</td><td>"))
cleanandjerk[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Snatch</td><td>"))
snatch[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Deadlift</td><td>"))
deadlift[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Back Squat</td><td>"))
backsquat[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
a <- unlist(strsplit(html, "<td>Max Pull-ups</td><td>"))
maxpullups[i - 7037] <- unlist(strsplit(a[2], "</td>"))[1]
}
)
(212287-7038)/25
(212287-7038)/25 * 25
(212287-7038)/25 * 29
(212287-7038)/25 * 29 /60
(212287-7038)/25 * 29 /360
(212287-7038)/25 * 29 /360 / 24
system.time(
for(i in 7038:(7038+n)){
html <- getURL(paste(root, i, sep = ""))
}
)
get <- function() pi
get
get()
get1 <- function() pi
get2 <- function() {pi}
get3 <- function(){
pi
}
get1()
get1()
get2()
get3()
get3 <- function(){
pi
}
get3()
get2 <- function() {pi}
get2()
get1 <- function() pi
get1
?solve
?vector
a <- LETTERS(!:%)
a <- LETTERS(1:5)
a <- 1:5
a
data(mtcars)
str(mtcars)
View(mtcars)
plot(mpg~cyl, data = mtcars)
?plot
install.packages("dagR")
library("dagR")
mat <- matrix(c(rc, et, ar, gp), ncol = 4)
rc <- c(2, 3, 3, 2)
et <- c(3, 3, 2, 1)
ar <- c(3, 3, 3, 2)
gp <- c(3, 2, 2, 3)
mat <- matrix(c(rc, et, ar, gp), ncol = 4)
mat
?matrix
providers <- c("Red Cross", "Etsy", "Argus", "Gridpoint")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1))
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = NULL)
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = NULL
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = NULL)
?par
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n")
yaxt = "n", xlab = NULL)
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n", xlab = NULL)
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n", xlab = "n")
yaxt = "n", xlab = "", ylab = "n")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n", xlab = "", ylab = "n")
plot(0, 0, xlim = c(0, 1), ylim = c(0, 1), bty = "n", type = "n", xaxt = "n",
yaxt = "n", xlab = "", ylab = "")
library(rColorBrewer)
install.packages("rColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
library(help = "RColorBrewer")
brewer.pal("greens", 4)
brewer.pal(4, "greens")
brewer.pal(4, "Greens")
product(dim(mat))
prod(dim(mat))
dim(mat)
setwd("C:/Users/Andrew/Dropbox/Research/R Markdown/chance-column")
source("http://www.openintro.org/stat/data/present.R")
plot(x = present$year, y = present$boys/present$girls)
download.file("http://bit.ly/chance_LAhomes", destfile = "LA.csv", method = "wget")
LA <- read.csv("LA.csv")
?download.file
download.file("http://bit.ly/chance_LAhomes", destfile = "LA.csv")
LA <- read.csv("LA.csv")
plot(price/1000000 ~ sqft, data = LA, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
if (!("openintro" %in% names(installed.packages()[,"Package"]))) {install.packages("openintro")}
suppressMessages(library(openintro, quietly = TRUE))
# install and load knitr package, if necessary
if (!("knitr" %in% names(installed.packages()[,"Package"]))) {install.packages("knitr")}
suppressMessages(library(knitr, quietly = TRUE))
# global chunk options: figure width & height + use global par settings
opts_chunk$set(fig.width=7, fig.height=4, par=TRUE, fig.path='figure/')
# global par options for figures
knit_hooks$set(par=function(before, options, envir){
if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1),cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
})
plot(price/1000000 ~ sqft, data = LA, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
mansions <- LA$sqft > 20000
LA_houses <– LA[!mansions, ]
plot(price/1000000 ~ sqft, data = LA_houses, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
mansions <- LA$sqft > 20000
LA_houses <– LA[!mansions, ]
LA_houses <- LA[!mansions, ]
plot(price/1000000 ~ sqft, data = LA_houses, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
download.file("http://bit.ly/chance_weight", destfile = "wt.csv")
wt <- read.csv("wt.csv")
hist(wt$weight_ounces, main = "", col = COL[1], border = "white",
ylab = "", xlab = "weight (in ounces)")
wt$weight_ounces[wt$weight_ounces < 500]
wt$weight_ounces_upd <- ifelse(wt$weight_ounces < 500,
wt$weight_ounces*16, wt$weight_ounces)
hist(wt$weight_ounces_upd, main = "", col = COL[1], border = "white",
ylab = "", xlab = "weight (in ounces)")
download.file("http://bit.ly/chance_LAhomes", destfile = "LA.csv")
?read.csv
d <- read.csv("https://stat.duke.edu/~mc301/data/LAhomes.csv ")
dim(d)
a <-read.csv("http://andrewpbray.github.io/LA.csv")
dim(a)
LA <- read.csv("http://andrewpbray.github.io/data/LA.csv")
plot(price/1000000 ~ sqft, data = LA, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
LA <- read.csv("http://andrewpbray.github.io/data/LA.csv")
plot(price/1000000 ~ sqft, data = LA, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
source("http://www.openintro.org/stat/data/present.R")
plot(x = present$year, y = present$boys/present$girls)
LA <- read.csv("http://andrewpbray.github.io/data/LA.csv")
plot(price/1000000 ~ sqft, data = LA, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
mansions <- LA$sqft > 20000
LA_houses <- LA[!mansions, ]
plot(price/1000000 ~ sqft, data = LA_houses, pch = 19, col = COL[1,3],
ylab = "price (in million $)")
wt <- read.csv("http://andrewpbray.github.io/wt.csv")
hist(wt$weight_ounces, main = "", col = COL[1], border = "white",
wt <- read.csv("http://andrewpbray.github.io/data/wt.csv")
wt <- read.csv("http://andrewpbray.github.io/data/wt.csv")
hist(wt$weight_ounces, main = "", col = COL[1], border = "white",
ylab = "", xlab = "weight (in ounces)")
wt$weight_ounces[wt$weight_ounces < 500]
wt$weight_ounces_upd <- ifelse(wt$weight_ounces < 500,
wt$weight_ounces*16, wt$weight_ounces)
hist(wt$weight_ounces_upd, main = "", col = COL[1], border = "white",
ylab = "", xlab = "weight (in ounces)")
